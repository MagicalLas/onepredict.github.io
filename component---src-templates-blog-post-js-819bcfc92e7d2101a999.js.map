{"version":3,"file":"component---src-templates-blog-post-js-819bcfc92e7d2101a999.js","mappings":"qOAMA,MAiFaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UA1FyBC,IAGlB,IAADC,EAAA,IAFJV,MAAM,SAAEW,EAAQ,KAAEC,EAAI,KAAEC,EAAMZ,eAAgBC,GAAM,SACpDY,GACDL,EACC,MAAMM,GAA6B,QAAjBL,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBL,QAAK,QACpCY,EAASf,EAAKI,YAAYW,QAAU,CAAC,EAE3C,OACEd,EAAAA,cAACe,EAAAA,EAAM,CAACJ,SAAUA,EAAUT,MAAOU,GACjCZ,EAAAA,cAAA,WACEgB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETlB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAImB,SAAS,YAAYpB,EAAKI,YAAYD,OAC1CF,EAAAA,cAAA,WACGc,EAAOM,QACNpB,EAAAA,cAAA,OAAKqB,IAAKP,EAAOM,OAAQE,IAAI,GAAGN,UAAU,WAE5ChB,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKgB,UAAU,UACZF,EAAOS,KACP,IAAI,IAEJ,IACAT,EAAOU,UAEVxB,EAAAA,cAAA,OAAKgB,UAAU,QACZjB,EAAKI,YAAYsB,SAK1BzB,EAAAA,cAAA,WACE0B,wBAAyB,CAAEC,OAAQ5B,EAAK6B,MACxCT,SAAS,gBAEXnB,EAAAA,cAAA,YAEFA,EAAAA,cAAA,OAAKgB,UAAU,iBACbhB,EAAAA,cAAA,MACE6B,MAAO,CACLC,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXlC,EAAAA,cAAA,UACGQ,GACCR,EAAAA,cAACmC,EAAAA,KAAI,CAACC,GAAI5B,EAAS6B,OAAOC,KAAMC,IAAI,QAAO,KACtC/B,EAASL,YAAYD,QAI9BF,EAAAA,cAAA,UACGS,GACCT,EAAAA,cAACmC,EAAAA,KAAI,CAACC,GAAI3B,EAAK4B,OAAOC,KAAMC,IAAI,QAC7B9B,EAAKN,YAAYD,MAAM,SAMlCF,EAAAA,cAAA,OAAKgB,UAAW,oBACdhB,EAAAA,cAACmC,EAAAA,KAAI,CACHC,GAAG,IACHP,MAAO,CACLW,mBAAoB,OACpBC,MAAO,UAGTzC,EAAAA,cAAA,OAAKgB,UAAW,oBAAoB,eAGjC,C","sources":["webpack://onepredict-engineering-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`;\n  const author = post.frontmatter.author || {};\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <div>\n            {author.avatar && (\n              <img src={author.avatar} alt=\"\" className=\"avatar\" />\n            )}\n            <div>\n              <div className=\"author\">\n                {author.name}\n                {' '}\n                &middot;\n                {' '}\n                {author.greeting}\n              </div>\n              <div className=\"date\">\n                {post.frontmatter.date}\n              </div>\n            </div>\n          </div>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <div className={\"blog-post-footer\"}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecorationLine: \"none\",\n            color: \"black\",\n          }}\n        >\n          <div className={\"blog-post-return\"}>목록으로 돌아가기</div>\n        </Link>\n      </div>\n    </Layout>\n  );\n};\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        author {\n          name\n          avatar\n          greeting\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","_site$siteMetadata","previous","next","site","location","siteTitle","siteMetadata","author","Layout","className","itemScope","itemType","itemProp","avatar","src","alt","name","greeting","date","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","slug","rel","textDecorationLine","color"],"sourceRoot":""}